module reversecounter(input logic clk, reset,

                      output logic clk1, reset1, div, div count, count, num1, num10, a, b, c, d, e, f, g, dig1, dig2, dig3, dig4, output logic[11:0] div_count)

always_comb begin

    clk1 <= clk; 
    reset1 < reset;

end

always ff (posedge clk1, posedge reset1) begin

    if (reset1) count <=15;

    else if (count == 0) count <= 15;

    else count <= count - 1;

    if (count > 9) begin num10 <= 1; div = 1; num1 <= count - 10, div <= 0 ; end

    else begin num10 = 0; div <= 1; num1 = count; div <= 0; end

end

always comb begin

    state(num10)

        0: begin dig1 = 1; dig2 = 0; dig3 = 1; dig4 = 1; a = 0; b = 0; c= 0; d = 0; e = 0; f = 0; g = 1; end

        1: begin dig1 = 1; dig2 = 0; dig3 = 1; dig4 = 1; a = 1; b = 0; c= 0; d = 1; e = 1; f = 1; g = 1; end

    end

always comb begin

    case(num1)
    
    0: begin dig1 = 0; dig2= 1; dig3 = 1; dig4 = 1; a = 0; b = 0; c = 0; d = 0; e = 0; f = 0; g = 1; end
    1: begin dig1 = 0; dig2= 1; dig3 = 1; dig4 = 1; a = 1; b = 0; c = 0; d = 1; e = 1; f = 1; g = 1; end
    2: begin dig1 = 0; dig2= 1; dig3 = 1; dig4 = 1; a = 0; b = 0; c = 1; d = 0; e = 0; f = 1; g = 0; end
    3: begin dig1 = 0; dig2= 1; dig3 = 1; dig4 = 1; a = 0; b = 0; c = 0; d = 0; e = 1; f = 1; g = 0; end
    4: begin dig1 = 0; dig2= 1; dig3 = 1; dig4 = 1; a = 1; b = 0; c = 0; d = 1; e = 1; f = 0; g = 0; end
    5: begin dig1 = 0; dig2= 1; dig3 = 1; dig4 = 1; a = 0; b = 1; c = 0; d = 0; e = 1; f = 0; g = 0; end
    6: begin dig1 = 0; dig2= 1; dig3 = 1; dig4 = 1; a = 0; b = 1; c = 0; d = 0; e = 0; f = 0; g = 0; end
    7: begin dig1 = 0; dig2= 1; dig3 = 1; dig4 = 1; a = 0; b = 0; c = 0; d = 1; e = 1; f = 1; g = 1; end
    8: begin dig1 = 0; dig2= 1; dig3 = 1; dig4 = 1; a = 0; b = 0; c = 0; d = 0; e = 0; f = 0; g = 0; end
    9: begin dig1 = 0; dig2= 1; dig3 = 1; dig4 = 1; a = 0; b = 0; c = 0; d = 0; e = 1; f = 0; g = 0; end
    endcase



always ff @(posedge div) begin
    if (div count == 4096) begin div_count <= 0; end 
    else div_count <= div_count + 1;
end
